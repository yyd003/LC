https://leetcode.com/problems/subsets

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList();
        subsetsHelper(result, nums, new ArrayList(), 0);
        return result;   
    }
    
    private void subsetsHelper(List<List<Integer>> result, int[] nums, List<Integer> sub, int idx){
        result.add(new ArrayList(sub));
        for(int i = idx; i < nums.length; i++){
            sub.add(nums[i]);
            subsetsHelper(result, nums, sub, i+1);
            sub.remove(sub.size() -1);
        }
    }
}

Runtime: 1 ms, faster than 64.24% of Java online submissions for Subsets.
Memory Usage: 39.2 MB, less than 73.83% of Java online submissions for Subsets.

class Solution {
    public List<List<Integer>> subsets(int[] nums) {
        List<List<Integer>> result = new ArrayList<>();
        result.add(new ArrayList<>());
        for (int num : nums) {
            List<List<Integer>> newSubsets = new ArrayList<>();
            for (List<Integer> current : result) {
                ArrayList<Integer> integers = new ArrayList<>(current);
                integers.add(num);
                newSubsets.add(integers);
            }
            result.addAll(newSubsets);
        }
        return result;
    }
    
}

Runtime: 0 ms
Memory Usage: 39.4 MB
